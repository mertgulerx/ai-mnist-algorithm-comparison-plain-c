import matplotlib.pyplot as plt
import os


# Veriler
epochs = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
test_steps = [0, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700]
train_loss_gd = [0.47954, 0.47308, 0.46715, 0.46165, 0.45649, 0.45160, 0.44692, 0.44240, 0.43800, 0.43366, 0.42937, 0.42507, 0.42075, 0.41638, 0.41192, 0.40735, 0.40265, 0.39780, 0.39276, 0.38752, 0.38204]
train_loss_sgd = [0.47954, 0.41930, 0.23028, 0.14048, 0.12850, 0.09571, 0.10140, 0.09283, 0.09548, 0.08343, 0.06915, 0.07890, 0.07200, 0.09037, 0.08188, 0.07338, 0.07456, 0.07280, 0.07007, 0.05926, 0.06680]
train_loss_adam = [0.47954, 0.15959, 0.07726, 0.07206, 0.03956, 0.04800, 0.05840, 0.05116, 0.05685, 0.04851, 0.03508, 0.04050, 0.04248, 0.03224, 0.03157, 0.03065, 0.03108, 0.03292, 0.03650, 0.02506, 0.02201]
train_accuracy_gd = [0.00000, 44.96597, 45.80261, 46.22802, 46.71016, 47.23483, 47.81622, 48.35508, 48.83721, 49.16336, 49.57459, 49.95746, 50.34033, 50.62394, 51.10607, 51.51730, 51.82927, 52.12706, 52.59501, 53.04878, 53.38911]
train_accuracy_sgd = [0.00000, 50.00000, 69.53125, 86.32812, 89.06250, 91.01562, 90.23438, 92.18750, 92.96875, 92.57812, 94.53125, 94.14062, 95.70312, 91.79688, 94.53125, 94.14062, 93.35938, 93.75000, 94.92188, 95.70312, 93.75000]
train_accuracy_adam = [0.00000, 82.81250, 92.57812, 95.70312, 97.65625, 97.65625, 95.31250, 96.87500, 95.31250, 98.04688, 99.21875, 97.26562, 98.82812, 98.43750, 99.21875, 97.65625, 98.82812, 98.82812, 98.82812, 99.60938, 99.60938]
train_time_gd = [0.00000, 0.05693, 0.11371, 0.17084, 0.22770, 0.28447, 0.34115, 0.39771, 0.45445, 0.51100, 0.56743, 0.62394, 0.68046, 0.73723, 0.79406, 0.85083, 0.90756, 0.96417, 1.02135, 1.07811, 1.13474]
train_time_sgd = [0.00000, 0.00231, 0.00478, 0.00704, 0.00945, 0.01174, 0.01410, 0.01655, 0.01877, 0.02117, 0.02371, 0.02593, 0.02817, 0.03038, 0.03269, 0.03484, 0.03716, 0.03958, 0.04185, 0.04405, 0.04636]
train_time_adam = [0.00000, 0.03424, 0.07161, 0.11066, 0.14980, 0.19088, 0.23209, 0.27378, 0.31492, 0.35808, 0.40141, 0.44440, 0.48758, 0.53089, 0.57385, 0.61682, 0.66051, 0.70497, 0.74969, 0.79427, 0.83893]
test_loss_gd = [0.00000, 0.48515, 0.42289, 0.44850, 0.45387, 0.46707, 0.46755, 0.46220, 0.45943, 0.46393, 0.46853, 0.46776, 0.47794, 0.47656, 0.47680, 0.47901, 0.48220, 0.47678]
test_loss_sgd = [0.00000, 0.05941, 0.05473, 0.06977, 0.05985, 0.05389, 0.05324, 0.05278, 0.04994, 0.04772, 0.04795, 0.04814, 0.05079, 0.05304, 0.05139, 0.05130, 0.05184, 0.04997]
test_loss_adam = [0.00000, 0.00000, 0.00995, 0.00664, 0.00748, 0.01198, 0.01165, 0.01141, 0.00999, 0.00999, 0.00999, 0.00908, 0.01082, 0.01076, 0.01071, 0.01066, 0.01062, 0.01058]
test_accuracy_gd = [100.00000, 51.48515, 57.71144, 55.14950, 54.61346, 53.29341, 53.24459, 53.78031, 54.05743, 53.60710, 53.14685, 53.22434, 52.20649, 52.34435, 52.31977, 52.09860, 51.78014, 52.32216]
test_accuracy_sgd = [100.00000, 94.05941, 94.52737, 93.02326, 94.01496, 94.61078, 94.67554, 94.72182, 95.00624, 95.22752, 95.20480, 95.18620, 94.92090, 94.69639, 94.86082, 94.87009, 94.81574, 95.00294]
test_accuracy_adam = [100.00000, 100.00000, 99.00497, 99.33555, 99.25187, 98.80239, 98.83527, 98.85877, 99.00124, 99.00111, 99.00100, 99.09174, 98.91756, 98.92390, 98.92934, 98.93404, 98.93816, 98.94180]
test_times = [0.00001, 0.00040, 0.00079, 0.00119, 0.00158, 0.00200, 0.00239, 0.00278, 0.00317, 0.00349, 0.00389, 0.00428, 0.00467, 0.00506, 0.00537, 0.00575, 0.00614, 0.00651]
weight_range = 0.200
batch_size = 256





# Klasör yolu
output_folder = "train_loss_time"

os.makedirs(output_folder, exist_ok=True)

# Grafik boyutunu ayarlama
plt.figure(figsize=(8, 8))

# Grafik için veriler
plt.plot(train_time_gd, train_loss_gd, label='GD', color='blue', marker='o')
plt.plot(train_time_sgd, train_loss_sgd, label='SGD', color='green', marker='o')
plt.plot(train_time_adam, train_loss_adam, label='Adam', color='red', marker='o')

# Grafik başlıkları ve etiketler
plt.title(f'Train Loss vs Time with Weight Initialization in Range [-{weight_range}, {weight_range}]\nBatch size for ADAM and SGD = {batch_size}')

plt.xlabel('Time (Seconds)')
plt.ylabel('Loss')

# Legenda eklemek
plt.legend()

# Grid'i etkinleştirme
plt.grid(True)

# Grafiği kaydetmek
file_path = os.path.join(output_folder, f'loss_vs_time_weight_range_{weight_range}.png')

# Grafiği kaydet
plt.savefig(file_path)

# Grafiği göstermek
plt.show()

